Проверить версию установленного git
$git --version
git version 2.20.1

Выполнить глобальные настройки Git:
$ git config --global user.name "xukapy"
$ git config --global user.email "s.xukapy@gmail.com"
$ git config --list
user.name=xukapy
user.email=s.xukapy@gmail.com

Выполнить локальные настройки проекта.
Например исключить PDF файлы из контроля:
$echo "*.pdf" > .gitignore


Чтобы сделать проект версионным необходимо выполнить следующие шаги
1) открыть terminal и перейти в корень проекта
  $ls ./HTML1
2) выполнить инициализацию репозитория (создасться каталог .git)
  $git init
  Initialized empty Git repository in /Users/xukapy/HTML Academy/HTML1/.git/

  $ls -1 -a
  .
  ..
  .git
  HTMLPositioning.txt
3) Поместить файлы под контроль версии:
   $git add .
4) Выполнить фиксацию
   $git commit -m "It's the first version"

Посмотреть текущее состояние (что изменено, какие изменения добавлены в stage, ...)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   letter.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   answer.txt
  modified:   news.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	news.txt

Если я выполню команду "git commit" зафиксируются только STAGED изменения.
В нашем случае это файл letter.txt
Чтобы добавить добавить в STAGED AREA измененные файлы или новые
$git add answer.txt news.txt
Чтобы вернуть из STAGED AREA файл, оставив в файле все изменения
$git reset HEAD answer.txt
Чтобы вернуть все изменения в файле к состоянию последнего комита
$git checkout answer.txt
Если после добавления файла STAGED AREA, снова его изменить, новые измения
не попадут в STAGED AREA автоматически и не будут зафиксированные командой
git commit. Этот файл/изменения нужно снова добавить в STAGED AREA с помощью
команды git add
$git add news.txt

Посмотреть изменения(которые еще NOT STAGED ):
$git diff
Увидим измения между текущей и последней зафиксированной версией(или STAGED,
 если есть)

Посмотреть изменения, которые уже проиндексированы (в STAGED AREA)
$git diff --staged

Посмотреть историю фиксаций:
$git log
У каждого комита есть свой хешь, который можно мспользовать для указателя на
версию файла

Посмотреть изменения в комите:
$git show 73b62fd929477be8d294f749320e33c50f56eb0f
,где 73b62fd929477be8d294f749320e33c50f56eb0f - хешь комита

Для восстановления содержимое файла на определенный комит:
$git checkout 73b62fd929477be8d294f749320e33c50f56eb0f letter.txt
Файл восстановится и будет помещен в STAGED AREA для последующего комита

Заменить сообщение в последнем комите
$git commit --amend -m "Исправленное сообщение"
Хешь комита изментится

Как удалить (новый)файл из последнего комита:
1) Помечаем файл для удаления
   $git rm rest.txt
   Изменения стразу попадут в STAGED AREA
2) Исправим последний комит
   $git commit --amend --no-edit
   Хешь комита изменится. Файл удалился. Чтобы сам файл сохранился в папке
   проекта нужно было добавить флаг "cached" в первую команду:
    $git rm --cached rest.txt

Получение справки по команде "git help"
$git help checkout


-------------------------------
Ветвление
-------------------------------
Git хранит комиты в папке .git

Посмотреть комиты в удобном однострочном формате
$git log --oneline
123cfc7 (HEAD -> master) All
73b62fd Add ftp client
7bca652 gitignore add
bf5ec7d Started history

Посмотреть содержимое комита:
$git cat-file -p 7bca652
tree fe669e3945dfa00f0647854bfe99d88613e81888
parent bf5ec7dcf5b9be126e178ba4ab6c28016bdc4e59
author xukapy <s.xukapy@gmail.com> 1549202266 +0300
committer xukapy <s.xukapy@gmail.com> 1549202266 +0300
