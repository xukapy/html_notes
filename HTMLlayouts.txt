Сетка посложнее, шаг 2 [21/32]

Способ именования классов: колонки имеют класс layout-column.
Префикс layout обозначает «сетка» или «раскладка». Таким образом,
мы даём понять,
что классы с этим префиксом предназначены для создания сетки.
Обычно для таких классов задают только:
  флоаты (left, rigth)
  размеры (width, min-height)
  внешние отступы (margin)
Обратите внимание еще на один подход построения сеток. Он заключается в том,
что блокам разметки задаются только размеры и внешние отступы.
Внутренние же отступы добавляются дополнительным элементам, вложенным
в ячейки сетки.
Такой подход упрощает расчет сеток. Блочная модель устроена таким образом,
что общий размер элемента складывается из ширины/высоты, маргинов и паддингов,
а также ширины рамок. Поэтому, чтобы получить правильные размеры блоков сетки,
всегда нужно помнить об этом.
Если же блокам сетки задавать только ширину и внешние отступы,
то слагаемых становится намного меньше, а шанс совершить ошибку уменьшается.

Погружение в inline-block [28/32]

Блочно-строчные элементы  у которых свойство display имеет
значение inline-block.
Снаружи они выглядят как обычные строчные, но внутри они ведут себя
как блочные.
От строчных им достались следующие черты:
	по ширине они ужимаются под своё содержимое;
	могут располагаться в одну строку;
	реагируют на вертикальное выравнивание, vertical-align;
	реагируют на горизонтальное выравнивание, text-align, заданное у родителя.
От блочных:
	им можно задавать размеры с помощью width и height;
	внешние и внутренние отступы и рамки, которые работают
  во всех направлениях и увеличивают размер элемента.

float vs inline-block [29/32]

Блочно-строчные элементы могут выстраиваться друг за другом, а если
не хватает места, то они переносятся на следующую строку.
Поведение похоже на флоатные элементы, однако, есть существенное отличие.
При переносе на следующую строку блочно-строчные ведут себя намного логичней.
Высота строк у них рассчитывается по максимальному элементу с учётом
отступов.

Блочно-строчные элементы очень часто используют для создания декоративных
элементов:  кнопок, плашек, блочков.
Также благодаря их умному поведению с их помощью создают различные списки
товаров в каталогах.
Для создания сеток страниц эти элементы используются реже.

inline-block и пробелы в коде [31/32]

Блочно-строчные ведут себя как текст, поэтому если в коде есть пробел
между элементами, то он отображается и на странице. Этот пробел
увеличивает отступы между товарами, не давая им поместиться в одну строку.
Бороться с пробелом после блочно-строчных можно несколькими способами:
	1. удалять пробелы в коде;
	2. обнулять размер шрифта;
	3. играться с маргинами после блочно-строчного.
Способ со шрифтом заключается в том, что мы задаём нулевой размер шрифта
у контейнера инлайн-блоков,а самим инлайн-блокам задаём исходный размер
 шрифта.
Способ не работает, если вы используете относительные размеры шрифта.

Способ с маргинами заключается в том, что мы уменьшаем отступ
после инлайн-блока на ширину пробела, около 4-5px.
А если нам нужно, чтобы элементы стояли вплотную друг к другу,
то задаём отрицательный отступ. Проблема с этим способом заключается в том,
что размер пробела может быть разным в разных шрифтах и может изменяться
при изменении размера шрифта.
